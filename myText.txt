nest new backend    //nest new "name folder"
npm run start:dev   //после сохранения идет перезапуск автоматически

nest g module user  //для создание модуля nest g module "name module"

nest g controller user --no-spec  //для создание контроллера nest g controller "name controller" "чтобы не было файла тест"




nest g service user --no-spec  //для создание контроллера nest g controller "name service" "чтобы не было файла тест"


sudo docker-compose up   //установка бд
-d — запуск контейнер в фоновом режиме. Это позволяет использовать терминал, из которого запущен контейнер, для выполнения других команд во время работы контейнера.

npm i --save @nestjs/config  //https://docs.nestjs.com/techniques/configuration


//подключаем Sequelize для работы с БД  https://docs.nestjs.com/recipes/sql-sequelize

npm install --save sequelize sequelize-typescript pg   ///устанавливаем  sequelize с пакетом для работы с БД pg

npm install --save-dev @types/sequelize //подклучаем типизацию sequelize

npm i --save @nestjs/sequelize



//Чтобы начать его использовать, мы сначала устанавливаем необходимую
//зависимость.
// RESTful API. Nest предоставляет специальный модуль, который позволяет
//генерировать такую ​​спецификацию с помощью декораторов.
npm install --save @nestjs/swagger



// нужно скачать пакет для валидации
npm i class-validator


///
npm install class-transformer

//Hashing# hashing to password
npm i bcrypt
// для тепизации
npm i -D @types/bcrypt

// create nev module  auth
npx nest g module auth
// crete controller without test file
npx nest g controller auth --no-spec
// create service without test file
npx nest g service auth --no-spec

//create module token
npx nest g module token
//create service token without test file
npx nest g service token --no-spec

//install jwt token
npm i --save @nestjs/jwt

//
npm install --save @nestjs/passport passport passport-jwt

npm install --save-dev @types/passport-jwt

remove github desctop







